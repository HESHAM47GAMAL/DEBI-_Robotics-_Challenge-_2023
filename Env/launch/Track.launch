<?xml version="1.0"?>
<launch>
    <!-- Arguemnet  -->
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [waffle, waffle_pi]"/>
    <arg name="world_file" default="$(find Env)/worlds/Track.world"/>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="recording" default="false"/>
    <arg name="debug" default="false"/>

  <rosparam file="$(find turtlebot3_manipulation_gazebo)/config/gazebo_controller.yaml" command="load"/>


    <!-- Gazebo empty world launch file -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_file)"/>
        <arg name="paused"  value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time )"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="recording" value="$(arg recording)"/>
        <arg name="debug" value="$(arg debug)"/>
        
    </include>

      <!-- send robot urdf to param server -->
    <include file="$(find turtlebot3_manipulation_description)/launch/turtlebot3_manipulation_upload.launch">
        <arg name="model" value="$(arg model)"/>
    </include>

    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -param robot_description -model robot -x -0.9 -y -0.5 -Y 0.0 -J joint1 0.0 -J joint2 0.0 -J joint3 0.0 -J joint4 0.0 -J gripper 0.0 -J gripper_sub 0.0 -z 0.1"/>
    <!-- -x 0.0 -y 0.0 -Y 0.0  Here set initial position of robot -->

    <!-- controller utils -->
    <include file="$(find turtlebot3_manipulation_gazebo)/launch/controller_utils.launch"/>

    <!-- run controllers -->
    <include file="$(find turtlebot3_manipulation_gazebo)/launch/turtlebot3_manipulation_controller.launch"/>

</launch>